name: CMake Conda

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: "${{ matrix.conf.name }} | ${{ matrix.cmake-build-type }}"
    runs-on: ${{ matrix.conf.os }}
    defaults:
      run:
        working-directory: conda_project
        # See https://github.com/conda-incubator/setup-miniconda#use-a-default-shell 
        # for the use of a default shell to ensure that the environment is sourced
        shell: ${{ matrix.conf.shell }}
    strategy:
      fail-fast: false
      matrix:
        conf:
#          - name: Ubuntu Latest
#            os: ubuntu-latest
#            shell: bash -l {0}
          - name: MacOS Latest
            os: macos-latest
            shell: bash -l {0}
          - name: Windows Latest
            os: windows-latest
            shell: cmd /C call {0}
        # Note that while we test on both Debug and Release,
        # some libraries may not work on Debug on Windows as conda-forge does not
        # provide Debug libraries for Windows and STL is not ABI compatible between
        # Debug and Release on MSVC
        cmake-build-type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: depend-on-me-env-env
          environment-file: conda_project/environment.yml

      - name: Some basic system dependencies (CDT, see https://conda-forge.org/docs/maintainer/knowledge_base.html#core-dependency-tree-packages-cdts) are expected to be found in the system
        if: startsWith(matrix.conf.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{ matrix.cmake-build-type }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{ matrix.cmake-build-type }}
